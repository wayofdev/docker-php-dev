{{ edit_comment_dev }}

FROM wayofdev/php-base:{{ php_version }}-{{ php_type }}-{{ os_name }}-latest

# Labels
# https://github.com/opencontainers/image-spec/blob/main/annotations.md
LABEL "maintainer"="lotyp <lotyp7@gmail.com>"
LABEL "vendor"="wayofdev"
LABEL "org.opencontainers.image.authors"="lotyp <lotyp7@gmail.com>"
LABEL "org.opencontainers.image.url"="https://hub.docker.com/r/wayofdev/php-{{ level }}"
LABEL "org.opencontainers.image.documentation"="https://github.com/wayofdev/docker-php-{{ level }}"
LABEL "org.opencontainers.image.source"="https://github.com/wayofdev/docker-php-{{ level }}"
LABEL "org.opencontainers.image.vendor"="wayofdev"
LABEL "org.opencontainers.image.licenses"="MIT"
LABEL "org.opencontainers.image.ref.name"="{{ php_version }}-{{ level }}"
LABEL "org.opencontainers.image.title"="PHP-{{ php_type|upper }} {{ php_version }}-{{ level }}"
LABEL "org.opencontainers.image.description"="PHP-{{ php_type|upper }} {{ php_version }}-{{ level }}"

ENV COMPOSER_ALLOW_SUPERUSER=1

USER root

RUN set -eux; \
    apk -U upgrade -a \
    # Add production dependencies
    && apk add --no-cache \
{% for pkg in system_packages | unique %}
        {{ pkg }} \
{% endfor %}
    && \
    curl -sSLf \
        -o /usr/local/bin/install-php-extensions \
        https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions \
    && chmod +x /usr/local/bin/install-php-extensions \
    && install-php-extensions \
{% for ext in ext_pecl_enabled | unique | sort %}
        {{ ext }} \
{% endfor %}
    # Other Dependencies
{% if true == install_composer %}
    # Composer
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer \
{% endif %}
{% if true == install_phive %}
    # Phive
    && curl -sSL https://phar.io/releases/phive.phar -o /usr/local/bin/phive \
    && chmod +x /usr/local/bin/phive \
{% endif %}
{% if 'cli' == php_type %}
{% if true == install_postgres_client %}
    && apk add --no-cache \
        postgresql-client \
{% if true == install_postgres_postgis %}
        postgis \
{% endif %}
{% endif %}
{% if true == install_mysql_client %}
    && apk add --no-cache mysql-client \
{% endif %}
{% endif %}
    # LibFakeTime - Dynamically change time in docker containers
    # Adding the faketime library to the preload file needs to be done last.
    # Otherwise, it will preload it for all commands that follow in this file
{% if true == install_faketime %}
    && apk add --no-cache -X https://dl-cdn.alpinelinux.org/alpine/edge/community libfaketime \
    && echo "/usr/lib/faketime/libfaketime.so.1" >> /etc/ld.so.preload \
{% endif %}
    && install-php-extensions --cleanup \
    && rm -rf /var/cache/apk/* \
    && rm -rf /tmp/* \
    && rm -rf /var/log/*

{% if 'xdebug' in ext_pecl_enabled %}
COPY --chown=www-data ./configs/99-xdebug.ini /usr/local/etc/php/conf.d/
{% endif %}

ENV LD_PRELOAD="$LD_PRELOAD /usr/lib/faketime/libfaketime.so.1"

USER www-data

{% if 'supervisord' == php_type %}
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisord.conf"]
{% endif %}
